
#define ECG_Pin 0    //Amplified ECG input (analog input)
#define QRS_Pin 3    //Comparator input (digital input)
#define STIM_Pin 13  //PM Stim indicator (digital output)

// Global variables
volatile int    LRI = 2450;             //Lower rate interval (ms);
volatile int    beat = 1;               //# of beats that have occurred
volatile int    sampPeriod = 10;                    //Sampling period (ms)

int     ECG = 0;                //ECG input
int     Comp = 0;               //Contemperaneous Comparator value
int     CompPrev = 0;           //Previous comparator value
int     CompThresh = 400;         //Comparator threshold (~4V)

float HR = 0.0;                   //HR in bpm

unsigned long    t_prev = 0;             //Previous beat (ms)
unsigned long    t_beat = 0;             //PRevious beat (ms)
unsigned long    timer = 0;                //Sampling timer (ms)
unsigned long    RR = 0; 

void setup ()
{
  Serial.begin(9600);
  pinMode(STIM_Pin,OUTPUT);
  digitalWrite(STIM_Pin,LOW);
}

void loop (){
 if (millis() - timer > sampPeriod) {
    ECG = analogRead(ECG_Pin);
    CompPrev = Comp;
    Comp = analogRead(A5);      //Read the comparator input from analog pin 5
    //Serial.println(Comp);

    if (Comp > CompThresh && CompPrev < CompThresh) {
      t_prev = t_beat;        //Shift current beat time to past
      t_beat = millis();      //Detects current beat time

      HR = 60000/(t_beat-t_prev);   // HR in bpm
      
  
        //if (beat > 1) {
          
          //t_prev = t_beat;    //Makes the current beat time the previous beat time
          beat = ++beat;
           Serial.print(t_beat - t_prev);
           Serial.print("     ");
           Serial.print("Natural Beat");
           Serial.print("     ");
           Serial.println(beat);
          
        //}
    }
  
    RR = millis() - t_beat;         //Examining the current time with respect to the previous beat

    //Serial.println(RR);
  
      if (RR > LRI){
        t_beat = millis();                 //Marks the stimulus as the current beat time
        digitalWrite(STIM_Pin,HIGH);       //Fire the stimulus
        delay(100);                        //Stimulus duration (adjust this value based on S-D curve)
        digitalWrite(STIM_Pin,LOW);
        
        beat = ++beat;
        Serial.print(t_prev);
        Serial.print("     ");
        Serial.print("Stim Beat");
        Serial.print("     ");
        Serial.println(beat);
  }  
  
    timer = millis();    

  }
}
  
  
 
